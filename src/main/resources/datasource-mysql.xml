<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<property name="connectionProperties" value="${dataSource.driver}"></property>
		<property name="driverClassName" value="${dataSource.driver}"></property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="50" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="1000" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
	    <!-- 
		    <property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" /> 
		-->
		
		<!-- 设置自动回收超时连接   -->
		<property name="removeAbandoned"  value="true"/>
		
		<!--  自动回收超时时间(以秒数为单位)  -->
		<property name="removeAbandonedTimeout" value="10"/> 

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		-->
		
		<!-- 配置监控统计拦截的filters 
		<property name="filters" value="stat" />-->
	</bean>
	
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.dome.bean" />
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
		<property name="mapperLocations" value="classpath*:com/dome/mapper/*.xml" />
	</bean>
	
	<!--  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.dome.web.*.dao" /><!-- 不能取名 .dao 会与其他冲突 -->
	</bean>
	
	<!-- transaction manager, use JtaTransactionManager for global tx 
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
			<qualifier value="isap" />
		</bean>
	-->
	
	<!-- 全注解方式   需加上@Transactional 
		<tx:annotation-driven transaction-manager="transactionManager" />
	-->
	
    <!-- 配置事务 -->    
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSource"/>
	</bean>
	
	  <!--配置哪些数据源需要开启事务-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
	            <tx:method name="batch*"  propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="save*"   propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="insert*" propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="import*" propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="add*"    propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="remove*" propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="delete*" propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            <tx:method name="update*" propagation="REQUIRED"  isolation="DEFAULT" rollback-for="Exception"/>
	            
	            <!--
	              	<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
	              	<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
	              	<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
	              	<tx:method name="login*" propagation="SUPPORTS" read-only="true" />
              	-->
              	<tx:method name="find*"   read-only="true" />
              	<tx:method name="get*"    read-only="true" />
              	<tx:method name="select*" read-only="true" />
              	<tx:method name="login*"  read-only="true" />
       </tx:attributes>
    </tx:advice>

    <!-- 配置哪些类的方法需要进行事务管理 -->
    <aop:config proxy-target-class="true">
       <aop:pointcut id="allManagerMethod" expression="execution(* com.dome.web.*.service.*.*(..))"/>
       <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
    </aop:config>
    
</beans>