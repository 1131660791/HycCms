<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       ">

	<context:component-scan base-package="com.dome"> <!-- com.dome.*.action -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" /> <!-- 扫描控制层 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" /> <!-- 扫描数据访问层 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />    <!-- 不扫描service层 -->
	</context:component-scan>
	
	<!-- 
		<mvc:interceptors> 登陆拦截器 <bean class="com.dome.interceptor.SessionInterceptor"></bean> 
		</mvc:interceptors> 
	-->

	<!--
		<mvc:annotation-driven validator="validator" conversion-service="conversionService"/> 
		<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" /> 
		<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
 	-->

	<!-- jstl视图解析器 ps: 可添加多个视图解析器 如freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/exhibition/" />
		<property name="suffix" value=".html" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>1048576000</value><!-- 上传文件大小限制为1000M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>8182</value>
		</property>
	</bean>

	<!-- SpringMVC 异常处理机制 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为 exception 定义需要特殊处理的异常，用类名或完全路径名作为key，异常页面作为值 -->
		<property name="exceptionAttribute" value="exception"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/errors/500</prop>
				<prop key="java.lang.Throwable">/errors/404</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/500">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>

		<!-- <property name="errorLogCategory" value="error"></property> 设置日志输出级别，不定义则默认不输出警告等错误日志信息 
			<property name="warnLogCategory" value="WARN"></property> -->
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 <property name="defaultErrorView" 
			value="/errors/error"></property> -->
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	
  <!--
	 <bean id="exceptionResolver" class="com.sclbxx.handler.UtilHandlerException">
		<property name="exceptionAttribute" value="exception"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/errors/500</prop>
				<prop key="java.lang.Throwable">/errors/404</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/500">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>
	</bean> 
  -->
</beans>  